name: Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  file-changes:
    runs-on: ubuntu-latest
    outputs:
      any: ${{ steps.check.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Get changed files
        id: check
        uses: tj-actions/changed-files@v45
        with:
          files: |
            .github/workflows/code-quality.yml
            gradle/libs.versions.toml
            gradle/kotlin-js-store/**
            **/*.kt
            **/*.kts

  spotless:
    runs-on: ubuntu-latest
    needs: [ file-changes ]
    if: needs.file-changes.outputs.any == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11
      - uses: gradle/actions/setup-gradle@v4

      - name: Cache Build files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('gradle.properties') }}

      - name: Check spotless/ktlint rules
        run: ./gradlew spotlessCheck

  api-check:
    runs-on: ubuntu-latest
    needs: [ file-changes ]
    if: needs.file-changes.outputs.any == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11

      - uses: gradle/actions/setup-gradle@v4

      - name: Cache Build files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('gradle.properties') }}

      - name: Check public api compatibility
        run: ./gradlew apiCheck
